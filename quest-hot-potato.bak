#lang slideshow

(require ts-curric-common)

(require (except-in ts-racket
                    scale-to-fit))

(require pict/color)
(require pict/shadow)
(require pict/code)
(require (except-in pict
                    frame))

(require simple-qr)

(require racket/runtime-path)
(define-runtime-path images "images")

(define (local-avatar s)
  (avatar (~a (path->string images) "/" s)))

(define (local-bitmap s)
  (bitmap (~a (path->string images) "/" s)))

(define POTATO        (circlify "blue" (local-avatar "cpx-hot-potato")))
(define POTATO-BONUS  (circlify "red" (local-avatar "cpx-hot-potato")))

; ---- Quest Card 1
(define (open-racket action)
  (activity-instructions (cond
                           [(eq? action "save") "Open DrRacket and Save File"]
                           [(eq? action "load") "Open DrRacket and Open File"])
                         '()
                         (list (instruction-open "DrRacket")
                               (cond
                                 [(eq? action "save") (instruction-basic "Save your blank file, make sure to add '.rkt' at the end.")]
                                 [(eq? action "load") (instruction-basic "Open your racket file from:")])
                               (instruction-folder "Desktop/SAVE_MY_WORK")
                               (instruction-goal "your racket file opened."))
                         (video-qr "http://bit.ly/2HV5yHn")))

; ---- Quest Card 2

; ---- Quest B Card 1
(define hot-potato-instructions
  (activity-instructions "Hot Potato Instructions"
                         '()
                         (list (instruction-basic "Scan the QR.")
                               (instruction-basic "Follow the instructions to build the hot potato.")
                               (instruction-goal  "your completed hot potato"))
                         (image-qr "https://bit.ly/2yLIirv")))

; ---- Quest B Card 2
(define complete-hot-potato-code
  (activity-instructions "Hot Potato Code (Complete)"
                         '()
                         (list (instruction-basic "With 'TS Magic Loader' open:")
                               (instruction-basic (codify "tscpx_hot_potato_complete"))
                               (instruction-basic "Click the Load button")
                               (instruction-goal "add the code to your CPX"))
                         (scale-to-fit (local-bitmap "cpx-hot-potato-avatar.png") 300 300 #:mode 'preserve)))

; ---- Complete Quest
(define code-hot-potato
  (list
   (with-award 0 (open-racket "save"))
   (choose "any"
           (list                      
            ))
   ))

(define build-hot-potato
  (list
   (with-award 0 hot-potato-instructions)
   (choose "any"
           (list                      
            (with-award 1 complete-hot-potato-code)
            ))
   ))

(define (shrink i)
  (reusable-material
   (scale i 0.5)))

(define (code-cards)
  (map shrink
       ;(cards->pages
       (make-picts "blue" "3A-" code-hot-potato (settings
                                           (cc-superimpose
                                            (bg (local-bitmap "bg-cpx.png"))
                                            (rectangle 1100 813))
                                           POTATO POTATO-BONUS POTATO-BONUS))
       ; )
       ))


(define (craft-cards)
  (map shrink
       ;(cards->pages
       (make-picts "blue" "3B-" build-hot-potato (settings
                                            (cc-superimpose
                                             (bg (local-bitmap "bg-cpx.png"))
                                             (rectangle 1100 813))
                                            POTATO POTATO-BONUS POTATO-BONUS))
       ;)
       ))

; ---- Provide Quests
(provide quest-hot-potato)

(define (quest-hot-potato)
  (append (code-cards)
          (craft-cards)
          )
  )